{
  "info": {
    "name": "06 - 2FA and Security Features",
    "description": "Two-Factor Authentication and enhanced security endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "user_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "temp_user_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Email Validation",
      "item": [
        {
          "name": "Validate Valid Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@gmail.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/validate-email",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "validate-email"]
            },
            "description": "Test email validation with a valid email"
          }
        },
        {
          "name": "Validate Invalid Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid@nonexistentdomain12345.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/validate-email",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "validate-email"]
            },
            "description": "Test email validation with an invalid email"
          }
        },
        {
          "name": "Validate Disposable Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@10minutemail.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/validate-email",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "validate-email"]
            },
            "description": "Test email validation with a disposable email"
          }
        }
      ]
    },
    {
      "name": "User Registration with Email Validation",
      "item": [
        {
          "name": "Register with Valid Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    console.log('User registered successfully with email validation');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@aramco.com\",\n  \"company\": \"Saudi Aramco\",\n  \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register with a valid email that passes live validation"
          }
        },
        {
          "name": "Register with Invalid Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"email\": \"jane@nonexistentdomain12345.com\",\n  \"company\": \"Saudi Aramco\",\n  \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Try to register with invalid email (should fail)"
          }
        }
      ]
    },
    {
      "name": "2FA Setup",
      "item": [
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.collectionVariables.set('user_token', response.data.token);",
                  "        console.log('User token saved');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@aramco.com\",\n  \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login to get authentication token"
          }
        },
        {
          "name": "Setup 2FA",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{user_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/setup-2fa",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "setup-2fa"]
            },
            "description": "Initialize 2FA setup and get QR code"
          }
        },
        {
          "name": "Verify 2FA Token",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{user_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/verify-2fa",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "verify-2fa"]
            },
            "description": "Verify 2FA token and enable 2FA (replace 123456 with actual token from authenticator app)"
          }
        }
      ]
    },
    {
      "name": "2FA Login",
      "item": [
        {
          "name": "Login with 2FA - Step 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.requiresTwoFactor) {",
                  "        pm.collectionVariables.set('temp_user_id', response.data.tempUserId);",
                  "        console.log('2FA required, temp user ID saved');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@aramco.com\",\n  \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "First step of 2FA login - should return requiresTwoFactor: true"
          }
        },
        {
          "name": "Login with 2FA - Step 2 (Token)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@aramco.com\",\n  \"password\": \"Password123\",\n  \"twoFactorToken\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Complete 2FA login with token (replace 123456 with actual token)"
          }
        },
        {
          "name": "Login with 2FA - Step 2 (Backup Code)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@aramco.com\",\n  \"password\": \"Password123\",\n  \"backupCode\": \"ABCD1234\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Complete 2FA login with backup code (replace with actual backup code)"
          }
        }
      ]
    },
    {
      "name": "2FA Management",
      "item": [
        {
          "name": "Generate New Backup Codes",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{user_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"Password123\",\n  \"token\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/generate-backup-codes",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "generate-backup-codes"]
            },
            "description": "Generate new backup codes (replace token with actual 2FA token)"
          }
        },
        {
          "name": "Disable 2FA",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{user_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"Password123\",\n  \"token\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/disable-2fa",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "disable-2fa"]
            },
            "description": "Disable 2FA (replace token with actual 2FA token)"
          }
        }
      ]
    },
    {
      "name": "Security Tests",
      "item": [
        {
          "name": "Try 2FA Setup Without Email Verification",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{user_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/setup-2fa",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "setup-2fa"]
            },
            "description": "Should fail if email is not verified"
          }
        },
        {
          "name": "Try Invalid 2FA Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@aramco.com\",\n  \"password\": \"Password123\",\n  \"twoFactorToken\": \"000000\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Should fail with invalid 2FA token"
          }
        }
      ]
    }
  ]
}